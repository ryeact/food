{"version":3,"sources":["assets/images/aneka-makanan.png","components/Navbar.js","components/Footer/Footer.js","components/ImageAndWellcome.js","components/CityCard.js","components/CityList.js","components/SearchCity.js","config/api.js","pages/Home.js","components/CategoryList.js","components/SearchKeyword.js","components/SearchCriteria.js","components/RatingLabel.js","components/RestaurantCard.js","pages/City.js","components/RestaurantProfile.js","components/Review.js","pages/RestaurantDetail.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","Footer","href","ImageAndWellcome","style","marginBottom","src","mainImage","width","alt","CityCard","props","city","name","country_name","to","id","_renderCityList","cities","length","map","key","CityList","title","showSubtitle","subtitle","SearchCity","type","placeholder","value","onChange","onClick","onClickSearch","API","baseUrl","api_key","process","Home","changeKeywordHandler","event","setState","keyword","target","searchhandler","state","url","axios","get","headers","params","q","then","data","status","citiesResultSearch","location_suggestions","cityKeywordSearch","catch","err","console","log","getFeaturedCities","city_ids","featuredCities","this","marginTop","Component","CategoryList","categories","category","categorySelected","categoryClickHandler","SearchKeyword","onClickAddToCriteria","SearchCriteria","criteria","cri","index","criteriaName","aria-hidden","color","removeCriteriaHandler","RatingLabel","backgroundColor","labelColor","borderColor","text","RestaurantCard","restaurant","thumb","borderRadius","fontWeight","location","locality","address","user_rating","rating_color","aggregate_rating","rating_text","cuisines","currency","average_cost_for_two","textDecoration","City","transformCategoriesData","getCityData","city_id","newCriteria","push","filter","addCriteriaHandler","splice","getCategoriesData","SearchHandler","restaurants","entity_id","entity_type","renderRestaurantList","match","RestaurantProfile","class","featured_image","boderRadius","votes","Review","border","review","user","profile_image","foodie_level_num","foodie_level","foodie_color","review_time_friendly","rating","review_text","RestaurantDetail","getRestaurantData","restaurant_id","res_id","getReviewsData","reviews","user_reviews","App","path","exact","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","require","config"],"mappings":"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","file":"static/js/main.82c2d2eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/aneka-makanan.87b5f04a.png\";","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Navbar = () => (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary sticky-top\">\r\n        <Link className=\"navbar-brand\">Food Paradise</Link>\r\n    </nav>\r\n)\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => (\r\n<footer className=\"my-footer\">\r\n    <div className=\"container\">\r\n        <div className=\"row\">\r\n            <div className=\"col-sm-4 text-center\">\r\n                <h5>About Food Paradise</h5>\r\n                <ul>\r\n                    <li><a href=\"#\">About Us</a></li>\r\n                    <li><a href=\"#\">Contact Us</a></li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"col-sm-4 text-center\">\r\n                <h5>Support</h5>\r\n                <ul>\r\n                    <li><a href=\"#\">FAQ</a></li>\r\n                    <li><a href=\"#\">Help Desk</a></li>\r\n                    <li><a href=\"#\">Forums</a></li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"col-sm-4 text-center\">\r\n                <h5>Download App</h5>\r\n                <ul>\r\n                    <li><a href=\"#\">Google Playstore</a></li>\r\n                    <li><a href=\"#\">App Store</a></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div className=\"social-networks\">\r\n        <a href=\"/#\" className=\"twitter\"><i className=\"fa fa-twitter\"></i></a>\r\n        <a href=\"/#\" className=\"facebook\"><i className=\"fa fa-facebook-official\"></i></a>\r\n        <a href=\"/#\" className=\"google\"><i className=\"fa fa-google-plus\"></i></a>\r\n    </div>\r\n    <div className=\"text-center\">\r\n        <p className=\"footer-copyright\">Copyright &copy; By Ryeact 2020</p>\r\n    </div>\r\n</footer>\r\n)\r\nexport default Footer;","import React from 'react';\r\nimport mainImage from \"../assets/images/aneka-makanan.png\";\r\n\r\nconst ImageAndWellcome = () => (\r\n    <>\r\n        <div className=\"row\" style={{ marginBottom: 30 }}>\r\n            <img src={mainImage} width= \"100%\" alt=\"aneka-makanan\"></img>\r\n        </div>\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n            <div className=\"card text-white bg-success mb-3 text-center\">\r\n                <div className=\"card-header\">\r\n                <h1>Wellcome To Food Paradise</h1>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                <h4 className=\"card-title\">The Easiest Way to Find Restaurants and Food</h4>\r\n                <p className=\"card-text\">You can grab information about restaurants, cafees, cuisines with just a few clicks.</p>\r\n                <p className=\"card-text\">Start by choosing the featured cities below, or search the city name.</p>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n)\r\n\r\nexport default ImageAndWellcome;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst CityCard = (props) => (\r\n    <div className=\"col-4\">\r\n        <div className=\"card bg-light mb-3\">\r\n            <div className=\"card-body\">\r\n                <h3 className=\"card-title\">{props.city.name}</h3>\r\n                <p>{props.city.country_name}</p>\r\n                <Link to={`/city/${props.city.id}`} className=\"card-text\">\r\n                    See restaurants in {props.city.name}\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default CityCard;","import React from 'react';\r\nimport CityCard from './CityCard';\r\n\r\nconst CityList = (props) => (\r\n    <>\r\n        <div className=\"row\">\r\n            <div className=\"col-12\">\r\n                <h3>{props.title}</h3>\r\n                {props.showSubtitle === true && props.subtitle != '' && \r\n                    <h6 className=\"text-muted\">Search result for keyword '{props.subtitle}'</h6>\r\n                }\r\n            </div>\r\n        </div>\r\n        <div className=\"row\">\r\n            {props.cities == null ? (\r\n                <div className=\"col\">\r\n                <p>Loading ...</p>    \r\n                </div>\r\n            ):(\r\n                _renderCityList(props.cities)\r\n            )}\r\n        </div>\r\n    </>\r\n);\r\n\r\nconst _renderCityList = (cities) => {\r\n    if(cities.length > 0) {\r\n        return cities.map( city => <CityCard key={city.id} city={city} />);\r\n    } else {\r\n        return (\r\n            <div className=\"col\">\r\n                <p className=\"text-danger\">Data not found !</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CityList;","import React from 'react';\r\n\r\nconst SearchCity = (props) => (\r\n    <div className=\"row\" style={{ marginBottom: 30}}>\r\n        <div className=\"col\">\r\n            <h3>Search City</h3>\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"form-row\">\r\n                    <div className=\"col-11\">\r\n                      <input className=\"form-control\" type=\"text\" placeholder=\"Type keyword or city name\"\r\n                        value={props.value} onChange={props.onChange}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-1\">\r\n                      <button className=\"btn btn-primary\" type=\"button\" onClick={props.onClickSearch}>Search</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n)\r\n\r\nexport default SearchCity;","export const API = {\r\n    zomato: {\r\n        baseUrl: 'https://developers.zomato.com/api/v2.1',\r\n        api_key: process.env.REACT_APP_API_KEY_ZOMATO\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport ImageAndWellcome from '../components/ImageAndWellcome';\r\nimport CityList from '../components/CityList';\r\nimport SearchCity from '../components/SearchCity';\r\nimport axios from 'axios';\r\nimport {API} from '../config/api';\r\n\r\nclass Home extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          keyword: \"\",\r\n          featuredCities: null,\r\n          citiesResultSearch: null,\r\n          cityKeywordSearch: \"\"\r\n        }\r\n      }\r\n      changeKeywordHandler = (event) => {\r\n        this.setState({ keyword: event.target.value });\r\n      }\r\n      searchhandler = () => {\r\n          let keyword = this.state.keyword;\r\n          var url = `${API.zomato.baseUrl}/cities`;\r\n          axios.get(url, {\r\n            headers: {\r\n                'user-key': API.zomato.api_key\r\n            },\r\n            params: {\r\n                q: keyword\r\n            }\r\n          }).then (({data}) => {\r\n                if (data.status === \"success\") {\r\n                    this.setState({citiesResultSearch: data.location_suggestions, keyword: '', cityKeywordSearch: keyword})\r\n                }\r\n          }).catch(err => console.log(err));\r\n      }\r\n      getFeaturedCities = () => {\r\n          var url = `${API.zomato.baseUrl}/cities`;\r\n          axios.get(url, {\r\n              headers: {\r\n                  'user-key': API.zomato.api_key\r\n              },\r\n              params: {\r\n                  city_ids: '74, 11052, 170'\r\n              }\r\n          }).then (({data}) => {\r\n              if (data.status === \"success\") {\r\n                  this.setState({featuredCities: data.location_suggestions})\r\n              }\r\n          }).catch(err => console.log(err));\r\n      }\r\n      componentDidMount() {\r\n          this.getFeaturedCities();\r\n      }\r\n    render() {\r\n        const citiesDummy = [\r\n            {id: 74, name: \"Jakarta\", country_name: \"Indonesia\"},\r\n            {id: 11052, name: \"Bandung\", country_name: \"Indonesia\"},\r\n            {id: 170, name: \"Bali\", country_name: \"Indonesia\"}\r\n          ];\r\n        return(\r\n            <>\r\n            <ImageAndWellcome />\r\n                <div className=\"container\" style={{ marginTop: 30, marginBottom: 30}}>\r\n                    <CityList title={'Featured Cities'} cities={this.state.featuredCities}/>\r\n                    <SearchCity value={this.state.keyword} \r\n                        onChange={this.changeKeywordHandler}\r\n                        onClickSearch={this.searchhandler}\r\n                    />\r\n                    {this.state.cityKeywordSearch !== '' && (\r\n                        <CityList title={'Search Result'} cities={this.state.citiesResultSearch} \r\n                        showSubtitle={true} \r\n                        subtitle={this.state.cityKeywordSearch}\r\n                    />\r\n                    )}\r\n                    \r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst CategoryList = (props) => (\r\n    props.categories ? (\r\n        <div className=\"list-group\">\r\n            {props.categories.map(category => (\r\n                <button\r\n                    key={category.id}\r\n                    className={'list-group-item list-group-item-action ' + (props.categorySelected && category.id === props.categorySelected.id ? 'active' : '')}\r\n                    onClick={() => props.categoryClickHandler(category)}>\r\n                        {category.name}\r\n                    </button>\r\n            ))}\r\n        </div>\r\n    ) : (\r\n        <p>Loading...</p>\r\n    )\r\n) \r\n\r\nexport default CategoryList;","import React from 'react';\r\n\r\nconst SearchKeyword = (props) => (\r\n    <>\r\n        <h5>Keyword</h5>\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n                <div className=\"form-row\">\r\n                    <div className=\"col-10\">\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            placeholder=\"Type keyword i.e : restaurant's name, location, cuisine, etc.\"\r\n                            value={props.keyword}\r\n                            onChange={props.changeKeywordHandler}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <button\r\n                            className=\"btn btn-primary\"\r\n                            type=\"button\"\r\n                            onClick={props.onClickAddToCriteria}>\r\n                                Add to criteria\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n)\r\n\r\nexport default SearchKeyword;","import React from 'react';\r\n\r\nconst SearchCriteria = (props) => (\r\n    <div className=\"card bg-light mb-3\" style={{ marginTop: 20 }}>\r\n        <div className=\"card-body\">\r\n            <p className=\"card-title\">Find Restaurants based on criteria : </p>\r\n            <table className=\"table table-hover\">\r\n                <tbody>\r\n                    {props.criteria.map((cri, index) => (\r\n                    <tr key={index} className=\"table-active\">\r\n                        <td width=\"40%\">{cri.criteriaName}</td>\r\n                        <td width=\"50%\">{cri.data.name}</td>\r\n                        <td>\r\n                            {cri.criteriaName !== 'City' && (\r\n                                <i \r\n                                    className=\"fa fa-times\"\r\n                                    aria-hidden=\"true\"\r\n                                    style={{ color: 'red'}}\r\n                                    onClick={() => props.removeCriteriaHandler(index)}>\r\n                                </i>\r\n                            )}\r\n                        </td>\r\n                    </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <div className=\"pull-right\">\r\n                <button className=\"btn btn-primary\" type=\"button\" onClick={props.onClickSearch}>Search</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default SearchCriteria;","import React from 'react';\r\n\r\nconst RatingLabel = (props) => (\r\n    <div className=\"btn btn-sm\"\r\n        style={{\r\n            color: 'white',\r\n            backgroundColor: `#${props.labelColor}`,\r\n            borderColor: `#${props.labelColor}`,\r\n        }}>\r\n        { props.text }\r\n    </div>\r\n)\r\n\r\nexport default RatingLabel;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport RatingLabel from './RatingLabel';\r\n\r\nconst RestaurantCard = (props) => (\r\n    <div className=\"col-6\" style={{ marginBottom: 20 }}>\r\n        <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                        <img className=\"img-responsive\" src={props.restaurant.thumb} alt=\"\" style={{ borderRadius: 5, width: 100 }} ></img>\r\n                    </div>\r\n                    <div className=\"col-9\">\r\n                        <h4 className=\"text-success\" style={{ fontWeight: 800 }}>{props.restaurant.name}</h4>\r\n                        <h6>{props.restaurant.location.locality}</h6>\r\n                        <h6 className=\"text-muted\">{props.restaurant.location.address}</h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Rating</td>\r\n                            <td>\r\n                                <RatingLabel\r\n                                    labelColor = {props.restaurant.user_rating.rating_color}\r\n                                    text    = {`${props.restaurant.user_rating.aggregate_rating} (${props.restaurant.user_rating.rating_text})`} \r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Cuisines</td>\r\n                            <td>{props.restaurant.cuisines}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Cost for two</td>\r\n                            <td>{props.restaurant.currency + '' + props.restaurant.average_cost_for_two}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"card-footer\">\r\n                <Link to={`/restaurant/${props.restaurant.id}`} style={{ textDecoration: 'none' }}>\r\n                    <button type=\"button\" className=\"btn btn-online-success btn-block\">\r\n                        View Restaurant Details\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default RestaurantCard;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { API } from '../config/api';\r\nimport CategoryList from '../components/CategoryList';\r\nimport SearchKeyword from '../components/SearchKeyword';\r\nimport SearchCriteria from '../components/SearchCriteria';\r\nimport RestaurantCard from '../components/RestaurantCard';\r\n\r\nclass City extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            city: null,\r\n            categories:null,\r\n            categorySelected: null,\r\n            keyword: '',\r\n            criteria: [],\r\n            restaurants: []\r\n        };\r\n    }\r\n    transformCategoriesData = categories => {\r\n        let categoriesTransformed = categories.map(category => {\r\n            return category.categories;\r\n        })\r\n        return categoriesTransformed;\r\n    }\r\n    getCityData = (city_id) => {\r\n        let url = `${API.zomato.baseUrl}/cities`;\r\n        axios.get(url, {\r\n            headers: {\r\n                'user-key' : API.zomato.api_key\r\n            },\r\n            params: {\r\n                city_ids: `${city_id}`\r\n            }\r\n        })\r\n        .then(({data}) => {\r\n            let city = data.location_suggestions[0];\r\n            let newCriteria = {\r\n                criteriaName: 'City',\r\n                data: city\r\n            }\r\n            let criteria = [...this.state.criteria]\r\n            criteria.push(newCriteria)\r\n            this.setState({ city, criteria })\r\n        })\r\n        .catch(err => console.log(err));\r\n    };\r\n    \r\n    componentDidMount() {\r\n        let {city_id} = this.props.match.params;\r\n        console.log(this.props.match);\r\n        this.getCityData(city_id);\r\n        this.getCategoriesData();\r\n    }\r\n    categoryClickHandler = (category) => {\r\n        let criteria = [...this.state.criteria]\r\n        criteria = criteria.filter(cri => cri.criteriaName !== 'Category')\r\n        let newCriteria = {\r\n            criteriaName: 'Category',\r\n            data: category\r\n        }\r\n        criteria.push(newCriteria)\r\n        this.setState({categorySelected: category, criteria });\r\n    }\r\n    changeKeywordHandler = event =>{\r\n        this.setState({keyword: event.target.value})\r\n    }\r\n    addCriteriaHandler = () => {\r\n        let criteria = [...this.state.criteria]\r\n        criteria = criteria.filter(cri => cri.criteriaName !== 'Keyword')\r\n        let newCriteria = {\r\n            criteriaName : 'Keyword',\r\n            data         : {\r\n                name: this.state.keyword\r\n            }\r\n        }\r\n\r\n        criteria.push(newCriteria)\r\n        this.setState({ keyword: '', criteria })\r\n    }\r\n    removeCriteriaHandler = (index) => {\r\n        let criteria = [...this.state.criteria]\r\n        criteria.splice(index, 1)\r\n        this.setState({ criteria })\r\n    }\r\n    getCategoriesData = () => {\r\n        let url = `${API.zomato.baseUrl}/categories`\r\n        axios.get(url, {\r\n            headers: {\r\n                'user-key': API.zomato.api_key\r\n            }\r\n        })\r\n        .then(({ data }) => {\r\n            let categories = this.transformCategoriesData(data.categories);\r\n            this.setState({ categories });\r\n        })\r\n        .catch(err => console.log(err))\r\n    };\r\n    SearchHandler = () => {\r\n        this.setState({restaurants: null})\r\n        let url = `${API.zomato.baseUrl}/search`\r\n        let params = {}\r\n\r\n        for (let cri of this.state.criteria) {\r\n\r\n            switch (cri.criteriaName) {\r\n                case 'City' :\r\n                    params.entity_id    = cri.data.id\r\n                    params.entity_type  = 'city'\r\n                    break\r\n                case 'Category' :\r\n                    params.category     = cri.data.id\r\n                    break\r\n                case 'Keyword' :\r\n                    params.q            = cri.data.name\r\n                    break\r\n                default : break\r\n            }\r\n        }\r\n\r\n        axios.get(url, {\r\n            headers: {\r\n                'user-key': API.zomato.api_key\r\n            },\r\n            params\r\n        })\r\n        .then(({ data }) => {\r\n            this.setState({ restaurants : data.restaurants })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    renderRestaurantList = () => {\r\n        if(this.state.restaurants == null) {\r\n            return (\r\n                <div className=\"col\">\r\n                    <p>Loading...</p>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if(this.state.restaurants.length > 0) {\r\n            return (\r\n                this.state.restaurants.map(({ restaurant }) => (\r\n                    <RestaurantCard key={restaurant.id} restaurant={restaurant} />\r\n                ))\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"col\">\r\n                    <p>No Data available. Please select Criteria, and Click Search</p>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <div className=\"container-fluid\" style={{ marginTop: 30, marginBottom: 30}}>\r\n                {this.state.city && (\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <h4 className=\"text-success\">Restaurant in { this.state.city.name }, { this.state.city.country_name}</h4>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <h5>Categories</h5>\r\n                                <CategoryList \r\n                                    categories = { this.state.categories}\r\n                                    categorySelected = {this.state.categorySelected}\r\n                                    categoryClickHandler ={(category) => this.categoryClickHandler(category)}\r\n                                />\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <SearchKeyword \r\n                                keyword = {this.state.keyword}\r\n                                changeKeywordHandler = {this.changeKeywordHandler}\r\n                                onClickAddToCriteria = {this.addCriteriaHandler}\r\n                            />\r\n                            <SearchCriteria\r\n                                criteria = {this.state.criteria}\r\n                                removeCriteriaHandler = {(index) => this.removeCriteriaHandler(index)}\r\n                                onClickSearch = {this.SearchHandler}\r\n                            />\r\n                            <div className=\"row\">\r\n                                <div className=\"col\" style={{ marginBottom: 10 }}>\r\n                                    <h4 className=\"text-success\">Restaurant List</h4>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                { this.renderRestaurantList() }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default City;","import React from 'react';\r\nimport RatingLabel from './RatingLabel';\r\n\r\nconst RestaurantProfile = (props) => (\r\n    <div className=\"card\">\r\n        <div className=\"card-header\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    {\r\n                        props.restaurant ? (\r\n                            <>\r\n                                <h4 className=\"text-success\" style={{ fontWeight: 800 }}>{props.restaurant.name}</h4>\r\n                                <h6 style={{ fontWeight: 600 }}>{props.restaurant.location.locality}</h6>\r\n                                <h6 className=\"text-muted\">{props.restaurant.location.address}</h6>\r\n                            </>\r\n                        ) : (\r\n                            <p>Loading...</p>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"card-body\">\r\n            {\r\n                props.restaurant ? (\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <img class=\"img-responsive\" src={props.restaurant.featured_image} alt=\"\" style={{ boderRadius: 5, width: 500 }}></img>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>Rating</td>\r\n                                        <td>\r\n                                            <RatingLabel\r\n                                                labelColor = {props.restaurant.user_rating.rating_color}\r\n                                                text = {`${props.restaurant.user_rating.aggregate_rating} (${props.restaurant.user_rating.rating_text})`}\r\n                                            />\r\n                                            <h6>{props.restaurant.user_rating.votes} Votes</h6>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Cuisinis</td>\r\n                                        <td>\r\n                                            {props.restaurant.cuisines}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Cost for two</td>\r\n                                        <td>\r\n                                            {props.restaurant.currency + \"\" + props.restaurant.average_cost_for_two}\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <p>Loading...</p>\r\n                )\r\n            }\r\n                                \r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default RestaurantProfile;","import React from 'react';\r\nimport RatingLabel from './RatingLabel';\r\n\r\nconst Review = (props) => (\r\n    <div className=\"card border-success\" style={{ marginBottom: 5 }}>\r\n        <div className=\"card-body\">\r\n            <div className=\"row\" style={{ marginBottom: 20 }}>\r\n                <div className=\"col-1\" style={{ border: '0px solid black'}}>\r\n                    <img className=\"img-responsive\" src={props.review.user.profile_image} alt=\"\" style={{ borderRadius: '50%', width: 80 }}></img>    \r\n                </div>\r\n                <div className=\"col-11\" style={{ border: '0px solid black'}}>\r\n                    <h6 className=\"font-weight-bold\">{props.review.user.name}</h6>\r\n                    <RatingLabel\r\n                        text = {`${props.review.user.foodie_level_num} (${props.review.user.foodie_level})`}\r\n                        labelColor = {`${props.review.user.foodie_color}`}\r\n                    />\r\n                </div>   \r\n            </div>\r\n            <h6 className=\"card-text text-muted\">{props.review.review_time_friendly}</h6>\r\n            <RatingLabel\r\n                text={`${props.review.rating} (${props.review.rating_text})`}\r\n                labelColor={`${props.review.rating_color}`}\r\n            />\r\n            <p className=\"card-text\">{props.review.review_text}</p>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Review;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { API } from '../config/api';\r\nimport RestaurantProfile from '../components/RestaurantProfile';\r\nimport Review from '../components/Review';\r\n\r\nclass RestaurantDetail extends Component {\r\n    constructor () {\r\n        super()\r\n        this.state = {\r\n            restaurant: null,\r\n            reviews: null\r\n        }\r\n    }\r\n    getRestaurantData = (restaurant_id) => {\r\n        let url = `${API.zomato.baseUrl}/restaurant`\r\n        axios.get(url, {\r\n            headers: {\r\n                'user-key': API.zomato.api_key\r\n            },\r\n            params: {\r\n                res_id: restaurant_id\r\n            }\r\n        })\r\n        .then(({ data }) => {\r\n            this.setState({ restaurant: data })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    getReviewsData = (restaurant_id) => {\r\n        let url = `${API.zomato.baseUrl}/reviews`\r\n        axios.get(url, {\r\n            headers: {\r\n                'user-key': API.zomato.api_key\r\n            },\r\n            params: {\r\n                res_id: restaurant_id\r\n            }\r\n        })\r\n        .then(({ data }) => {\r\n            this.setState({ reviews: data.user_reviews })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    componentDidMount () {\r\n        let { params } = this.props.match\r\n        this.getRestaurantData(params.restaurant_id)\r\n        this.getReviewsData(params.restaurant_id)\r\n    }\r\n    render () {\r\n        return (\r\n            <div className=\"container\" style={{ marginTop: 30, marginBottom: 30 }}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\" style={{ marginBottom: 20 }}>\r\n                        <RestaurantProfile restaurant = {this.state.restaurant}/>\r\n                    </div>\r\n                    <div className=\"col-12\" style={{ marginBottom: 20 }}>\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"text-success\" style={{ fontWeight: 800 }}>Reviews</h4>\r\n                                { this.state.reviews ? (\r\n                                    this.state.reviews.map(({ review }) => (\r\n                                        <Review key={review.id} review={review} />\r\n                                    ))\r\n                                ) : (\r\n                                    <p>Loading...</p>\r\n                                )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RestaurantDetail;","import React, {Component} from 'react';\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer/Footer';\nimport Home from './pages/Home';\nimport City from  './pages/City';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport RestaurantDetail from './pages/RestaurantDetail';\n\nclass App extends Component {\n  \n  render() {\n\n    return (\n      <Router>\n        <Navbar />\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/city/:city_id\" component={City} />\n        <Route path=\"/restaurant/:restaurant_id\" component={RestaurantDetail}></Route>\n        <Footer />\n      </Router> \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nrequire('dotenv').config();\n\n"],"sourceRoot":""}